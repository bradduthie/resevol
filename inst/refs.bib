@article{Hamblin2013,
abstract = {* Genetic algorithms are a heuristic global optimisation technique mimicking the action of natural selection to solve hard optimisation problems, which has enjoyed growing usage in evolution and ecology. However, there is little standardisation in how genetic algorithms are implemented in these fields and even less practical advice for those hoping to implement genetic algorithms for their own models. This article aims to demystify genetic algorithms and provide assistance to researchers; basic programming knowledge is important for working with genetic algorithms, but none is required to read this article. * I review the basics of genetic algorithm methodology and provide suggestions on problems that may or may not benefit from genetic algorithm methods. The genetic operators (selection, replacement, mutation, crossover) and their rate parameters (mutation rate, etc.) are a source of potential confusion and to ease their selection, I present recommendations informed by historical usage and best practices, concluding with potential pitfalls. * Good reasons for employing genetic algorithms include: solving optimisation problems beyond the reach of analytical techniques, relaxing model assumptions, evolving behaviour in individual-based models, and simulating co-evolutionary processes. However, genetic algorithms are not always the correct technique to use. Simpler methods may sometimes outperform genetic algorithms, and certain problem features may cause trouble. * Genetic algorithms strike a balance between exploration of the search space and exploitation of good solutions, driven by the choice of genetic operators and rate parameters. I outline a basic set of parameter values and operator choices for genetic algorithm models as a starting point and provide advice on how to modify them to explore the exploitation/exploration trade-off. Finally, I provide general advice on analysis and reporting of these models. * There are a number of potential issues that can surprise unwary users, such as rate parameter values that lead to pathological outcomes; I suggest ways to detect and correct these problems. Also, contrary to popular usage, genetic algorithms can find solutions to game theory problems but cannot guarantee their stability. Finally, while genetic algorithms offer great power and flexibility by drawing inspiration from evolutionary processes, they are (usually) not a faithful model of genetics or evolution.},
author = {Hamblin, Steven},
doi = {10.1111/2041-210X.12000},
file = {:home/brad/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Hamblin - 2013 - On the practical usage of genetic algorithms in ecology and evolution.pdf:pdf},
isbn = {2041-210X},
issn = {2041210X},
journal = {Methods in Ecology and Evolution},
keywords = {Evolutionary computation,Genetic algorithm,Metaheuristics,Optimisation techniques},
mendeley-groups = {random_mat,AICC},
number = {2},
pages = {184--194},
title = {{On the practical usage of genetic algorithms in ecology and evolution}},
volume = {4},
year = {2013}
}
@book{Luke2015,
abstract = {Metaheuristics is a rather unfortunate1 term often used to describe a major subfield, indeed the primary subfield, of stochastic optimization. Stochastic optimization is the general class of algorithms and techniques which employ some degree of randomness to find optimal (or as optimal as possible) solutions to hard problems. Metaheuristics are the most general of these kinds of algorithms, and are applied to a very wide range of problems. What kinds of problems? In Jacobellis v. Ohio (1964, regarding obscenity), the United States Supreme Court, Justice Potter Stewart famously wrote, I shall not today attempt further to define the kinds of material I understand to be embraced within that shorthand description; and perhaps I could never succeed in intelligibly doing so. But I know it when I see it, and the motion picture involved in this case is not that. Metaheuristics are applied to I know it when I see it problems. They're algorithms used to find answers to problems when you have very little to help you: you don't know what the optimal solution looks like, you don't know how to go about finding it in a principled way, you have very little heuristic information to go on, and brute-force search is out of the question because the space is too large. But if you're given a candidate solution to your problem, you can test it and assess how good it is. That is, you know a good one when you see it. For example: imagine if you're trying to find an optimal set of robot behaviors for a soccer goalie robot. You have a simulator for the robot and can test any given robot behavior set and assign it a quality (you know a good one when you see it). And you've come up with a definition for what robot behavior sets look like in general. But you have no idea what the optimal behavior set is, nor even how to go about finding it.},
author = {Luke, Sean},
booktitle = {Optimization},
doi = {10.1007/s10710-011-9139-0},
file = {:home/brad/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Luke - 2015 - Essentials of Metaheuristics.pdf:pdf},
isbn = {9781300549628},
issn = {1389-2576},
pages = {1--235},
title = {{Essentials of Metaheuristics}},
url = {http://cs.gmu.edu/$%5Csim$sean/book/metaheuristics/},
year = {2015}
}
@article{Duthie2018,
abstract = {Management strategy evaluation (MSE) is a powerful tool for simulating all key aspects of natural resource management under conditions of uncertainty. We present the R package GMSE, which generalises MSE using a game-theoretic approach, applying genetic algorithms to simulate adaptive decision-making management scenarios between stakeholders with competing objectives under complex social-ecological interactions and uncertainty. GMSE models can be agent-based and spatially explicit, incorporating a high degree of realism through mechanistic modelling of links and feedbacks among stakeholders and with the ecosystem; additionally, user-defined sub-models can also be incorporated as functions into the broader GMSE framework. We show how GMSE simulates a social-ecological system using the example of an adaptively managed waterfowl population on an agricultural landscape; simulated waterfowl exploit agricultural land, causing conflict between conservation interests and the interest of food producers maximising their crop yield. The R package GMSE is open source under GNU Public License; source code and documents are freely available on GitHub.},
author = {Duthie, A Bradley and Cusack, Jeremy J and Jones, Isabel L and Nilsen, Erlend B and Pozo, Rocio A and Rakotonarivo, O. Sarobidy and Moorter, Bram Van and Bunnefeld, Nils},
doi = {10.1101/221432},
file = {:home/brad/.local/share/data/Mendeley Ltd./Mendeley Desktop/Downloaded/Duthie et al. - 2018 - GMSE an R package for generalised management strategy evaluation.pdf:pdf},
journal = {Methods in Ecology and Evolution},
keywords = {adaptive management,conservation conflict,ecological modelling,game theory,management},
mendeley-groups = {AICC},
pages = {2396--2401},
title = {{GMSE: an R package for generalised management strategy evaluation}},
url = {https://www.biorxiv.org/content/early/2017/11/17/221432},
volume = {9},
year = {2018}
}
